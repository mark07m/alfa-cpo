const axios = require('axios');

const API_BASE_URL = 'http://localhost:3001/api';

async function testAdminAPI() {
  console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –¥–ª—è –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏...\n');

  const tests = [
    {
      name: '–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∞—Ä–±–∏—Ç—Ä–∞–∂–Ω—ã—Ö —É–ø—Ä–∞–≤–ª—è—é—â–∏—Ö',
      endpoint: '/registry',
      method: 'GET'
    },
    {
      name: '–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–µ–µ—Å—Ç—Ä–∞',
      endpoint: '/registry/statistics',
      method: 'GET'
    },
    {
      name: '–≠–∫—Å–ø–æ—Ä—Ç –≤ Excel',
      endpoint: '/registry/export/excel',
      method: 'GET'
    },
    {
      name: '–≠–∫—Å–ø–æ—Ä—Ç –≤ CSV',
      endpoint: '/registry/export/csv',
      method: 'GET'
    }
  ];

  for (const test of tests) {
    try {
      console.log(`üìã ${test.name}...`);
      
      const response = await axios({
        method: test.method,
        url: `${API_BASE_URL}${test.endpoint}`,
        timeout: 5000
      });

      console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ: ${response.status} ${response.statusText}`);
      
      if (test.endpoint === '/registry') {
        console.log(`   üìä –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${response.data.data?.length || 0}`);
        console.log(`   üìÑ –ü–∞–≥–∏–Ω–∞—Ü–∏—è: ${JSON.stringify(response.data.pagination || {})}`);
      } else if (test.endpoint === '/registry/statistics') {
        console.log(`   üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: ${JSON.stringify(response.data.data || {})}`);
      } else if (test.endpoint.includes('/export/')) {
        console.log(`   üìÅ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: ${response.data.length || 0} –±–∞–π—Ç`);
      }
      
    } catch (error) {
      console.log(`‚ùå –û—à–∏–±–∫–∞: ${error.response?.status || error.code} - ${error.message}`);
      if (error.response?.data) {
        console.log(`   üìù –î–µ—Ç–∞–ª–∏: ${JSON.stringify(error.response.data)}`);
      }
    }
    console.log('');
  }

  console.log('üèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
}

testAdminAPI().catch(console.error);
