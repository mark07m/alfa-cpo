const axios = require('axios');

const FRONTEND_URL = 'http://localhost:3002';
const BACKEND_URL = 'http://localhost:3001/api';

async function testFrontendAuth() {
  console.log('üîê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ frontend API...\n');

  try {
    // 1. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ backend
    console.log('1. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    const registerResponse = await axios.post(`${BACKEND_URL}/auth/register`, {
      email: `testuser${Date.now()}@example.com`,
      password: 'test123',
      firstName: 'Test',
      lastName: 'User'
    });
    
    const token = registerResponse.data.data.token;
    console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, —Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω');

    // 2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–∏ —á–µ—Ä–µ–∑ frontend API
    console.log('\n2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–∏ —á–µ—Ä–µ–∑ frontend API...');
    
    // –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∏–º ID –Ω–æ–≤–æ—Å—Ç–∏
    const newsResponse = await axios.get(`${BACKEND_URL}/news`, {
      headers: { Authorization: `Bearer ${token}` }
    });
    
    const newsId = newsResponse.data.data[0]._id;
    console.log(`üì∞ –ù–∞–π–¥–µ–Ω–∞ –Ω–æ–≤–æ—Å—Ç—å —Å ID: ${newsId}`);

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º PUT –∑–∞–ø—Ä–æ—Å (–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏)
    console.log('\n3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ PUT –∑–∞–ø—Ä–æ—Å–∞...');
    const putResponse = await axios.put(`${FRONTEND_URL}/api/news/${newsId}`, {
      title: 'Updated via Frontend PUT',
      status: 'published'
    }, {
      headers: { Authorization: `Bearer ${token}` }
    });
    
    console.log('‚úÖ PUT –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–µ–Ω:', putResponse.data.success);

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º PATCH –∑–∞–ø—Ä–æ—Å (–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞)
    console.log('\n4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ PATCH –∑–∞–ø—Ä–æ—Å–∞...');
    const patchResponse = await axios.patch(`${FRONTEND_URL}/api/news/${newsId}/status`, {
      status: 'draft'
    }, {
      headers: { Authorization: `Bearer ${token}` }
    });
    
    console.log('‚úÖ PATCH –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–µ–Ω:', patchResponse.data.success);

    console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.response?.data || error.message);
  }
}

testFrontendAuth();
