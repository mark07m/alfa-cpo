const axios = require('axios');

const API_BASE_URL = 'http://localhost:3001/api';

async function testIdFix() {
  console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è ID...\n');

  try {
    // –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞
    console.log('üìã –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∞—Ä–±–∏—Ç—Ä–∞–∂–Ω—ã—Ö —É–ø—Ä–∞–≤–ª—è—é—â–∏—Ö...');
    const listResponse = await axios.get(`${API_BASE_URL}/registry?limit=1`);
    
    if (listResponse.data.data && listResponse.data.data.length > 0) {
      const item = listResponse.data.data[0];
      console.log('‚úÖ –°–ø–∏—Å–æ–∫ –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ');
      console.log(`   üìù –§–ò–û: ${item.fullName}`);
      console.log(`   üÜî _id: ${item._id}`);
      console.log(`   üìä –ù–æ–º–µ—Ä –≤ —Ä–µ–µ—Å—Ç—Ä–µ: ${item.registryNumber}`);
      
      // –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏
      console.log('\nüîç –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏...');
      const cardResponse = await axios.get(`${API_BASE_URL}/registry/${item._id}`);
      
      if (cardResponse.data.data) {
        console.log('‚úÖ –ö–∞—Ä—Ç–æ—á–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
        console.log(`   üìù –§–ò–û: ${cardResponse.data.data.fullName}`);
        console.log(`   üÜî _id: ${cardResponse.data.data._id}`);
        console.log(`   üìß Email: ${cardResponse.data.data.email}`);
        console.log(`   üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${cardResponse.data.data.phone}`);
        
        console.log('\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!');
        console.log('üéØ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ:');
        console.log(`   http://localhost:3002/registry/arbitrators/${item._id}`);
      } else {
        console.log('‚ùå –û—à–∏–±–∫–∞: –¥–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
      }
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞: —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç');
    }
  } catch (error) {
    console.log(`‚ùå –û—à–∏–±–∫–∞: ${error.response?.status || error.code} - ${error.message}`);
    if (error.response?.data) {
      console.log(`   üìù –î–µ—Ç–∞–ª–∏: ${JSON.stringify(error.response.data)}`);
    }
  }
}

testIdFix().catch(console.error);
